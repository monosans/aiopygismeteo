[tool.poetry]
name = "aiopygismeteo"
version = "5.0.6"
description = "Asynchronous wrapper for Gismeteo API"
authors = ["monosans <hsyqixco@protonmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/monosans/aiopygismeteo"
documentation = "https://aiopygismeteo.readthedocs.io"
classifiers = [
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: Pydantic :: 1",
    "Framework :: Pydantic",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Natural Language :: Russian",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.7.2"
aiohttp = "^3.8"
pygismeteo-base = "^4.0"

[tool.poetry.group.dev.dependencies]
black = ">=22.12"
covdefaults = "^2.2"
mypy = "^1.0"
pre-commit = ">=2.21,<4"
pydantic = "^1.10"
pytest = "^7.2"
pytest-asyncio = ">=0.20,<0.22"
pytest-cov = "^4.0"
ruff = ">=0.0.252,<0.0.260"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4"
mkdocs-material = "^9.0"

[tool.black]
target-version = ["py37"]
skip-magic-trailing-comma = true
preview = true

[tool.coverage.report]
exclude_lines = ["@(abc.)?abstractmethod"]

[tool.coverage.run]
plugins = ["covdefaults"]

[tool.mypy]
python_version = "3.7"
disallow_subclassing_any = false
disallow_untyped_calls = false
disallow_untyped_decorators = false
warn_unreachable = true
local_partial_types = true
enable_error_code = [
    "redundant-self",
    "redundant-expr",
    "truthy-bool",
    "truthy-iterable",
    "ignore-without-code",
    "unused-awaitable",
]
strict = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
xfail_strict = true
addopts = ["--strict-markers", "--strict-config", "--asyncio-mode=auto"]

[tool.ruff]
target-version = "py37"
select = ["ALL"]
ignore = [
    "ANN",
    "B008",
    "BLE001",
    "C901",
    "COM",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D203",
    "D205",
    "D212",
    "D213",
    "D400",
    "D401",
    "D407",
    "D415",
    "D417",
    "DJ008",
    "ERA001",
    "PD901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "PT012",
    "RUF001",
    "RUF002",
    "RUF003",
    "S110",
    "S112",
    "S308",
    "SIM105",
    "TCH001",
    "TCH002",
    "TCH003",
    "TID252",
    "TRY400",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.isort]
combine-as-imports = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
build-backend = "poetry.core.masonry.api"
